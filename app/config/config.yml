# This is the main configuration file of your application. It stores all the
# common options for every execution environment ('prod', 'dev', 'test').

# To avoid creating configuration files that are too long, we first import some
# files that define the values for important parts of the Symfony application,
# such as the security component and the dependency injection services
imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# These are the configuration parameters that define the application's behavior
# and which are independent from the underlying technical infrastructure
# See https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en|fr|de|es|cs|nl|ru|uk|ro|pt_BR|pl|it|ja|id|ca|sl|hr
    app.notifications.email_sender: anonymous@example.com
    app.path.post_images: /uploads/images/posts
    app.path.page_images: /uploads/images/pages

# Basic configuration for the Symfony framework features
framework:
    # The 'ide' option turns all of the file paths in an exception page
    # into clickable links that open the given file using your favorite IDE.
    # Supported values are 'phpstorm', 'sublime', 'textmate', 'macvim' and 'emacs'.
    # When 'ide' is set to null the file is opened in your web browser.
    # See https://symfony.com/doc/current/reference/configuration/framework.html#ide
    ide: ~

    # When using the HTTP Cache, ESI allows to render page fragments separately
    # and with different cache configurations for each fragment
    # https://symfony.com/doc/current/book/http_cache.html#edge-side-includes
    esi:             { enabled: true }
    translator:      { fallback: "%locale%" }
    secret:          "%env(SYMFONY_SECRET)%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration (used for rendering application templates)
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - "form/layout.html.twig"
        - "form/fields.html.twig"

# Doctrine Configuration (used to access databases and manipulate their information)
doctrine:
    dbal:
        # if you don't want to use SQLite, change the URL in parameters.yml or set the DATABASE_URL environment variable
        # url: "%env(DATABASE_URL)%"

        # instead of using a URL, you may also uncomment the following lines to configure your database
        driver: "pdo_mysql"
        dbname: "c9"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration (used to send emails)
# instead of configuring the mailer credentials in this file, we pull
# them from the app/config/parameters.yml file. The reason is that config.yml
# stores options that change the application behavior and parameters.yml
# stores options that change from one server to another
#
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Easy Admin Configuration - Javier Eguiluz
easy_admin:
    site_name: 'Sitio web'
    translation_domain: 'messages'
    entities:
        User:
            label: app.menu.users
            class: AppBundle\Entity\User
            list:
                title: app.title.user
                fields: 
                    - { property: 'id', label: 'app.menu.id'}
                    - { property: 'fullName', label: 'app.menu.fullName'}
                    - { property: 'username', label: 'app.menu.username'}
                    - { property: 'email', label: 'app.menu.email'}
                    - { property: 'password', label: 'app.menu.password'}
                    - { property: 'roles', label: 'app.menu.roles'}    

        Post:
            label: app.menu.posts
            class: AppBundle\Entity\Post

        Tag:
            label: app.menu.tags
            class: AppBundle\Entity\Tag

        Comment:
            label: app.menu.comments
            class: AppBundle\Entity\Comment

        Menu:
            label: app.menu.menu
            class: kevintweber\KtwDatabaseMenuBundle\Entity\MenuItem

    design:
        color_scheme: 'light'

    assets:
        favicon: 
            path: ''
            mime_type: 'image/xxx'
            
# Vich Image Uploader Configuration
vich_uploader:
    db_driver: orm
    mappings:
        post_images:
            uri_prefix:         '%app.path.post_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/posts'
            namer:              
                service:         vich_uploader.namer_uniqid
                options:        { property: 'slug' }
        page_images:
            uri_prefix:         '%app.path.page_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/pages'
            
# Ktw Menu Database Configuration
#ktw_database_menu:
#    menu_item_entity: kevintweber\KtwDatabaseMenuBundle\Entity\MenuItem

# Knp Menu Configuration    
#    knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
#    twig:
#        template: KnpMenuBundle::menu.html.twig
    #  if true, enables the helper for PHP templates
#    templating: false
    # the renderer to use, list is also available by default
    #default_renderer: twig